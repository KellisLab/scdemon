* scdemon: single-cell decorrelated module networks
** Installation
**** Python package:

Install the python package with pip directly from github as: 
#+BEGIN_SRC sh
pip install git+https://github.com/KellisLab/scdemon
#+END_SRC

For a fresh install, or if version number hasn't changed, first run: ~pip uninstall scdemon~

Alternatively, install by cloning the directory as:

#+BEGIN_SRC sh
git clone git@github.com:KellisLab/scdemon.git
pip install ./scdemon
#+END_SRC


**** Minimal conda environment:

#+BEGIN_SRC bash
conda create -n scdemonpy conda-forge::anndata conda-forge::tqdm conda-forge::pip conda-forge::igraph conda-forge::umap-learn conda::scikit-build
#+END_SRC


**** Full Dependencies:

#+BEGIN_SRC bash
numpy, pandas,
scipy, tqdm,
igraph, umap-learn,
leidenalg, scikit-learn,
scanpy, anndata,
seaborn, matplotlib,
fbpca, gprofiler-official,
python-igraph, adjustText,
numba
#+END_SRC


** Usage
See Documentation: https://scdemon.readthedocs.io/

See ~notebooks/example.py~ for a more complete example.

Basic example using ~scanpy~:

#+BEGIN_SRC python
import numpy as np
import scanpy as sc
import scdemon as sm
from scdemon.utils import recipe_full
from scdemon import plotting as pl

# Load one of scanpy's datasets:
adata = sc.datasets.pbmc3k()
recipe_full(adata, preprocess=True, annotate=True)

# Make the modules handling object:
mod = sm.modules_core(adata, suffix='pbmc_example', svd_k=100)
mod.setup()

# Build a gene-graph graph and learn modules:
graph_id = 'base'
mod.make_graph(graph_id, resolution=2.5)

# Plot genes on the gene-gene graph and on the gene-level UMAP basis
pl.plot_genes(mod, graph_id, attr="leiden", show_labels=True, width=16)
pl.plot_genes(mod, graph_id, basis='umap', attr="leiden", width=16)

# Plot module expression on the cell-level UMAP basis:
pl.plot_umap_grid(mod, graph_id)

# Get the modules and/or print them out:
mlist = mod.get_modules(graph_id, print_modules=False)
mod.save_modules(graph_id)

# Get functional enrichments for the modules:
gpres = sm.get_goterms(mod, graph_id)
#+END_SRC

